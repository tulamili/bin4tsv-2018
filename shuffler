#!/usr/bin/perl
use 5.014 ; use strict ; use warnings ; # 5.014 is neccesary for srand to work well.
use List::Util ;
use Term::ANSIColor qw/:constants color/; $Term::ANSIColor::AUTORESET = 1 ;
use Getopt::Std ; getopts "=ns:!",\my%o ;
print STDERR "\$o{s}=$o{s}\n" if $o{'!'} ;
&procOptions ; &choreHeader ; &coreLoops ; exit ( 0 ) ;

## いろいろな関数たち

sub procOptions { $o{s} = defined $o{s} ? srand $o{s} : srand } # 乱数シードの保管/設定
sub choreHeader { print ( my $tmp = <> ) if $o{'='} } # ヘッダの処理

sub coreLoops {
	 my @lines ; # 標準入力の各行が格納される。
	 push @lines, $_ while ( <> ) ; # 標準入力を全てここで読みとる。
	 for ( List::Util::shuffle 0 .. $#lines ) {
		  print GREEN $_+1 , "\t" if $o{n} ;
		  print $lines[$_] ;
	 }
     $0 =~ s|.*/|| ;
	 say STDERR CYAN "used randmom seed: $o{s} ($0)." ; # 処理したことについての派生的情報を出力

}

sub VERSION_MESSAGE{}
sub HELP_MESSAGE{ $0=~s|.*/|| ; while ( <DATA> ){ s/\$0/$0/g ; print $_ if s/^=head1// .. s/^=cut// } exit 0 }
__END__

=encoding utf8

=head1

 $0 -s seed

 [用途と使い方]

 各行をシャッフルする。

 [オプション]

 -= 入力の最初の1行目はそのまま出力し、シャッフルの対象とはしない。
 -n 各行の先頭に、何行目から来たかを表示。
 -s 乱数のシードを指定する。

=cut
