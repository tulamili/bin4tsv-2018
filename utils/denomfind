#!/usr/bin/perl

#
# denomfind 
#    小数がいくつか与えられたら、それはどんな(共通する)分母の分数であるかを推定する
#   -- developed by 下野寿之 Toshiyuki Shimono in Tokyo, Japan, 2016-06-20
#

use 5.001 ; use strict ; use warnings ;  # 5.014 で動作確認済み
use Getopt::Std ; getopts "cfirm:n:v%" , \my%o ; 
use POSIX qw[ ceil floor ] ; 

sub initOpt ( ) ; # 初期のコマンドオプションの処理
sub readNums ( ) ; # 入力の数の読取り。-i があるかないかで、標準入力/ファイルの中を読むか、コマンド引数を採用するか
sub main ( ) ; 
sub exNum ( $ ) ; # 数を与えたら、それがどのような数であり得たかを、半区間[x,y) の形で返す。
sub decDig ( $ ) ; # 小数点以下が何桁であるか。
sub numInt ( $$ ) ; # 引数(x,y)が与えられた時に、区間[x,y] から、yを除いた半区間に整数が、何個含まれるか

initOpt ; 
main ; 
exit 0 ;

sub main ( ) { 
	my @nums = readNums () ; 

	my ( @n0 , @n1 ) ; 
	for ( @nums ) { 
		my ( $n0 , $n1 ) = exNum $_  ;
		push @n0 , $n0 ; 
		push @n1 , $n1 ; 
	}

	for my $t ( 1 .. $o{m} ) { 
		my $kosu = 0 ; 
		print $t , "\t" ;
		for my $i ( 0 .. $#nums ) { 
			my ($m0,$m1) = ( "$n0[$i]" * "$t" , "$n1[$i]" * "$t" ) ; 
			print $m0<$m1? "[$m0,$m1)\t" : "($m1,$m0]\t" if $o{v} ;
			$kosu ++ if numInt "$m0" , "$m1"  ; 
		}
		print $kosu , "\n" ;
	}
}

# 半区間 [ $x , $y ) when $x<$y または ( $y , $x ] when $y<$x に、何個の整数が含まれるか。
sub numInt ( $$ ) { 
	my ( $x, $y ) = @_  ;
	return $x < $y ? ceil($y)-ceil($x) : floor($x)-floor($y) ; 
}

sub exNum ( $ ) { 
	my $num = "$_[0]" ; 
	my $dig = decDig $num ; 
	my $eps = "0.1" ** $dig ; # 10進数文字列を使っている。これで、内部2進数の問題を回避。
	my $epsH = "$eps" * "0.5" ;   # 区間の半分の幅である。
	my $numB = "$num" + "$eps" ; #  区間 [ $num , $numU ) 画

	( $num, $numB ) = ( "$num" - "$epsH" , "$numB" - "$epsH" ) if $o{r}  ;
	$numB = "$num" - "$eps" if $o{c} ; 
	return $num, $numB ;
}

sub decDig ( $ ) { 
	return 0 if rindex ( $_[0] , '.' ) == -1 ; 
	return length ( $_[0] )  - rindex ( $_[0] , '.' ) - 1 ; # 小数点以下に数が何桁あるか?
}

sub initOpt ( ) { 
  $o{m} //= 13 ;
  $o{n} //= 20 ;

    if ( ! $o{i} ) { 
    pipe *STDIN , my $WH ; 
    print {$WH} join "\n" , splice @ARGV , 0 ; 
    close $WH ; 
  } 
}

sub readNums ( ) { 
	my @nums = () ; 
	while ( <> ) { 
		chomp ; 
		push @nums , $_ ; 
	}

	@nums = map { "$_" * "0.01" } @nums if $o{'%'} ; 
	return @nums ; 
}

sub VERSION_MESSAGE {}
sub HELP_MESSAGE {
  use FindBin qw[ $Script ] ;
  $ARGV[1] //= '' ;
  open my $FH , '<' , $0 ;
  while(<$FH>){
    s/\$0/$Script/g ;
    print $_ if $ARGV[1] eq 'opt' ? m/^\ +\-/ : s/^=head1// .. s/^=cut// ;
  }
  close $FH ;
  exit 0 ;
}


=encoding utf8

=head1

 $0 

   小数がいくつか与えられたら、それらがどんな共通する分母の、分数であったかの推定を
   するための数値計算プログラム。

 使用例: 
    $0 -rvm 50 0.25 0.33 
     # 四捨五入して、0.25 と 0.33 になるような分数で同じ分母を持つものを見つける。
     # 出力される各行の最終行が 2 となるものを探せば良い。

 オブシヨン: 

  -c : 入力された数は、切り上げられた数であるとみなす。(ceil)
  -i : 数をコマンド引数でなくて、標準入力または引数で指定されるファイルの中から読み取る。
  -r : 入力された数は、四捨五入された数とみなす。(round)
  -f : 入力された数は、切り捨てられた数であると見なす。( floor )
  -m num : 分母の数をどこまで大きくするか。
  -v : 分子を知るべく、その半区間を表示。
  -% : 入力された数はパーセンテージ表記(百分率)であると見なし、内部的には100分の1倍される。

  -c も -r も指定されなかった場合は、-f が指定されたものと見なす。
  ここで言う半区間とは、数学的な区間[x,y)または(x,y]のような、それぞれ、x以上y未満、x超y以下のような数全体を表している。

=cut
