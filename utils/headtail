#!/usr/bin/perl
use 5.014 ; use strict ; use warnings ;
use Getopt::Std ; getopts "f:n:",\my%o ;
$| = 1 ; 
$o{n} //= 3 ;
$o{f} //= 1 ; 
my  @nums = ( 1,2,5)  ;

my @ostr2 ; 

# まず先頭の方は出力する。
while( <> ) {
    print &outLine( [ $. , $_ ] ) ;
    last if ( $. == $o{n} ) ;
}

# 次に最終行で取り出す可能性のあるものを 指定数個貯める。
while( <> ) {
    push @ostr2 , [ $. , $_ ] ;
    last if ( $. == 2*$o{n} ) ;
}

# その次に、一行来る度に、先読み先捨てで捨てる。
while( <> ) {
    my $tmp = shift @ostr2 ;
    print &outLine( $tmp ) if &niceNumber ( $tmp->[0] ) ;
    push @ostr2 , [ $. , $_ ] ;  
}

# 最後に残っているものを書き出す。
print map { &outLine( $_ ) } @ostr2 ;  


## 関数
sub outLine ( $ ) { $_[0]->[0], "\t-\t", $_[0]->[1] }  ; 

sub niceNumber ( $ ) { 
    my $head = shift @nums ; 
    while ( $head < $_[0] ) { 
        push @nums , $head * 10 ; 
        $head = shift @nums 
    }

    if ( $head == $_[0] ) { 
        push @nums , $head * 10 ; 
        return $_[0] >= $o{f} ? 1 : 0 ; 
     }

    unshift @nums, $head ; 
    return 0 ; 
}



=encoding utf8
=head1

headtail.pl

   先頭から3行、末尾から3行のみを表示する。
   -n 4 のような指定で3の数を変えることか出来る。

   途中も 10, 20, 50 , 100, 200, 500 , 1000 .. 行目など切りの良い数字の行数で表示をする。
   その途中の行番号については、開始行を -f num のように指定することが出来る。

=cut
