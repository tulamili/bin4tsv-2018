#!/usr/bin/perl 
use 5.010 ; use strict ; use warnings ; 
use Getopt::Std ; getopts 'tu=' , \my%o ;
use Encode qw/decode_utf8/ ; 
print (my $tmp=<>) if $o{'='} ; 

while ( <> ) {
    chomp ; 
    my @fld = split /\t/, $_ , -1 ; 
    @fld = map { decode_utf8 $_ } @fld if $o{u};
    @fld = map { length  } @fld ; 
    @fld = ( scalar @fld ) if $o{t}  ; 
    print join ("\t", @fld ) , "\n" ; 
}

exit 0 ; 

sub VERSION_MESSAGE { 
}

sub HELP_MESSAGE { 
    $0 =~ s/.*\/// ; 
    while ( <DATA> ) {
        s/\$0/$0/g ; 
        print $_ if s/^=head1// .. s/^=cut// ; 
    }
    exit 0 
}
__END__ 

=encoding utf8 

=head1

 $0 

 入力データを各行をタブ毎に区切って、文字の長さに変換して出力する。
 行末の改行文字は長さ計算の対象ではない。

オプション :

  -=   :  一行目を(ヘッダと見なして)そのまま出力する。
  -u   :  utf-8 とみなして、長さを計算する。そうでなければ、単純なバイト長になる。
  -t   :  単純に各行の、タブの数を数える。

ヒント: 

  $0 -= some.tsv | colsummary.pl -= とすると、長さの分布が得られる。

=cut
